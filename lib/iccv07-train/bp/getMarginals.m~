function marginal = getMarginals(joint, i)
% Computes marginal along dimension i of the joint likelihood given by
% joint.

nvals = size(joint, i);

% nd = numel(nvals);
% shiftnum = rem(i,nd);
% if shiftnum > 0 
%     joint = permute(joint,[shiftnum+1:nd 1:shiftnum]); % joint = shiftdim(joint, i);
% end
i = rem(i,ndims(x)); 


%joint = shiftdim(joint, i); % make i the last dimension (for easy indexing)
numjoint = numel(joint);
numOtherVals = numjoint / nvals; 
subind = (1:numOtherVals); % indiced for variable_i = 1

marginal = zeros(nvals, 1);
joint = reshape(joint, [numjoint 1]);
for k = 1:nvals    
    marginal(k) = sum(joint(subind + (k-1)*numOtherVals));
end